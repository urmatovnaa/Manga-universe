# Generated by Django 4.1.1 on 2023-05-29 12:22

import apps.title_app.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admin_panel_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdultContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Возрастной рейтинг')),
            ],
            options={
                'verbose_name': 'Возрастной рейтинг',
                'verbose_name_plural': 'Возрастной рейтинг',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='ReleaseFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Формат выпуска')),
            ],
            options={
                'verbose_name': 'Формат выпуска',
                'verbose_name_plural': 'Форматы выпуска',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Тег')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='TitleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Статус тайтла')),
            ],
            options={
                'verbose_name': 'Статус тайтла',
                'verbose_name_plural': 'Статус тайтла',
            },
        ),
        migrations.CreateModel(
            name='TitleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Тип',
                'verbose_name_plural': 'Типы',
            },
        ),
        migrations.CreateModel(
            name='TranslatorStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Статус перевода')),
            ],
            options={
                'verbose_name': 'Статус перевода',
                'verbose_name_plural': 'Статусы перевода',
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='cover/', verbose_name='Обложка')),
                ('background', models.ImageField(blank=True, null=True, upload_to='background/', verbose_name='Фон')),
                ('russian_name', models.CharField(blank=True, max_length=100, null=True, validators=[apps.title_app.validators.validate_russian], verbose_name='Русское название')),
                ('english_name', models.CharField(max_length=100, unique=True, validators=[apps.title_app.validators.validate_english], verbose_name='Английское название')),
                ('alternative_names', models.CharField(blank=True, max_length=500, null=True, verbose_name='Альтернативные названия (с иероглифами)')),
                ('release_year', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год релиза')),
                ('title_url', models.SlugField(blank=True, null=True, unique=True, verbose_name='урл манги')),
                ('download_chapter', models.CharField(blank=True, choices=[('All', 'Все'), ('Only', 'Создатель и Переводчики')], max_length=50, null=True, verbose_name='Загрузка глав')),
                ('links_to_original', models.URLField(blank=True, null=True, verbose_name='Ссылки на оригинал или анлейт (помогает модерации)')),
                ('description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Описание')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('adult_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='title_app.adultcontent', verbose_name='Контент для взрослых')),
                ('artist', models.ManyToManyField(blank=True, related_name='artist', to='admin_panel_app.person', verbose_name='Художник')),
                ('author', models.ManyToManyField(blank=True, related_name='author', to='admin_panel_app.person', verbose_name='Автор')),
                ('genres', models.ManyToManyField(blank=True, related_name='genres', to='title_app.genre', verbose_name='Жанры')),
                ('publisher', models.ManyToManyField(blank=True, related_name='publisher', to='admin_panel_app.person', verbose_name='Издатель')),
                ('release_format', models.ManyToManyField(blank=True, related_name='release_format', to='title_app.releaseformat', verbose_name='Формат выпуска')),
                ('tags', models.ManyToManyField(blank=True, related_name='tags', to='title_app.tag', verbose_name='Теги')),
                ('title_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='title_app.titlestatus', verbose_name='Статус тайтла')),
                ('title_type', models.ForeignKey(blank=True, default='манга', null=True, on_delete=django.db.models.deletion.SET_NULL, to='title_app.titletype', verbose_name='Тип')),
                ('translator_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='title_app.translatorstatus', verbose_name='Статус перевода')),
                ('translators', models.ManyToManyField(blank=True, related_name='translators', to='admin_panel_app.team', verbose_name='Переводчики')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Тайтл',
                'verbose_name_plural': 'Тайтлы',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Рейтинг')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate', to='title_app.title', verbose_name='Тайтл')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
                'unique_together': {('title', 'user')},
            },
        ),
    ]
